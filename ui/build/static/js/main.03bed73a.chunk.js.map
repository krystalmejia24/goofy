{"version":3,"sources":["images/bar-white-icon.svg","reducers/tasks.ts","store/configureStore.ts","reducers/index.ts","theme.ts","withConfig.tsx","containers/types.ts","components/OrgChannelsList/types.ts","components/OrgChannelsList/OrgChannelsList.tsx","components/GroundEncodersList/types.ts","components/GroundEncodersList/GroundEncodersList.tsx","components/FixedIngestPointList/types.ts","components/FixedIngestPointList/FixedIngestPointList.tsx","containers/Home/Home.tsx","containers/Home/Menu.tsx","containers/App.tsx","index.tsx"],"names":["module","exports","TasksActionTypes","initialState","combineReducers","tasks","state","action","type","GetTasksSuccess","items","AddTask","concat","payload","sagaMiddleware","createSagaMiddleware","primaryColor","blue","createMuiTheme","palette","primary","dark","light","red","A200","main","secondary","A700","warning","orange","typography","fontFamily","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","reduxImmutableStateInvariant","useStyles","makeStyles","theme","organizationName","flex","propellerIcon","width","root","flexGrow","container","tableHeader","OrgChannelsList","props","classes","rows","thumbnails","createdAt","channelId","name","description","region","status","Chip","color","label","icon","CircularProgress","variant","size","thickness","more","Button","style","backgroundColor","Grid","justify","className","Paper","elevation","TableContainer","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","row","key","src","borderRadius","alt","TablePagination","rowsPerPageOptions","component","count","length","rowsPerPage","page","onChangePage","onChangeRowsPerPage","GroundEncodersList","inputDevices","usedInputDevices","FixedIngestPointList","id","alias","Home","createStyles","display","MenuListComposition","React","useState","open","setOpen","anchorRef","useRef","handleClose","event","current","contains","target","handleListKeyDown","preventDefault","prevOpen","useEffect","focus","ref","aria-controls","undefined","aria-haspopup","onClick","Popper","anchorEl","role","transition","disablePortal","TransitionProps","placement","Grow","transformOrigin","ClickAwayListener","onClickAway","MenuList","autoFocusItem","onKeyDown","MenuItem","Component","withConfig","AppBar","position","Toolbar","PropellerIcon","Typography","CssBaseline","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.03bed73a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bar-white-icon.5e75eae4.svg\";","import { Task } from '../store/configureStore';\r\n\r\nenum TasksActionTypes {\r\n    GetTasks = 'GET_TASKS',\r\n    GetTasksSuccess = 'GET_TASKS_SUCCESS',\r\n    GetTasksFailed = 'GET_TASKS_FAILED',\r\n    AddTask = 'ADD_TASK',\r\n}\r\n\r\nexport const initialState = [];\r\n\r\nexport interface TaskActionType {\r\n    type: TasksActionTypes;\r\n    payload?: Task;\r\n    items?: Task[];\r\n}\r\n\r\nexport const actions = {\r\n    getTasks: (): TaskActionType => ({ type: TasksActionTypes.GetTasks }),\r\n    addTask: (task: Task): TaskActionType => ({ type: TasksActionTypes.AddTask, payload: task }),\r\n};\r\n\r\nexport default (state: Task[] = initialState, action: TaskActionType): Task[] => {\r\n    switch (action.type) {\r\n        case TasksActionTypes.GetTasksSuccess:\r\n            return action.items!;\r\n        case TasksActionTypes.AddTask:\r\n            return state.concat([action.payload!]);\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { applyMiddleware, createStore, Store } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport reduxImmutableStateInvariant from 'redux-immutable-state-invariant';\r\n\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\nimport rootReducer from '../reducers';\r\n\r\n// enable when create rootSaga\r\n// import rootSaga from '../sagas';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nexport interface Task {\r\n    name: string;\r\n}\r\n\r\nexport interface AppState {\r\n    tasks: Task[];\r\n}\r\n\r\nexport const configureStore = (initialState: AppState): Store => {    \r\n    const store: Store = createStore(\r\n        rootReducer,\r\n        initialState,\r\n        composeWithDevTools(\r\n            applyMiddleware(reduxImmutableStateInvariant(), sagaMiddleware),\r\n        ),\r\n    );\r\n\r\n    // enable when create rootSaga\r\n    // sagaMiddleware.run(rootSaga);\r\n\r\n    return store;\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport tasks from './tasks';\r\n\r\nexport default combineReducers({\r\n    tasks,\r\n});\r\n","import { blue, red, orange } from '@material-ui/core/colors';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst primaryColor = blue;\r\n\r\nexport default createMuiTheme({\r\n    palette: {\r\n        type: 'dark',\r\n        primary: {\r\n            dark: primaryColor[400],\r\n            light: red.A200,\r\n            main: primaryColor[600],\r\n        },\r\n        secondary: {\r\n            dark: red.A700,\r\n            light: '#ffffff',\r\n            main: '#ffffff',\r\n        },\r\n        warning: {\r\n            dark:  orange[500],\r\n            light: orange[100],\r\n            main: orange[500]\r\n        }\r\n    },\r\n    typography: {\r\n        fontFamily: 'Lato, sans-serif',\r\n    },\r\n});\r\n","import * as React from 'react';\r\n\r\nimport { \r\n    MuiThemeProvider, CssBaseline \r\n} from '@material-ui/core';\r\n\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { configureStore } from './store/configureStore';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport theme from './theme';\r\n\r\n\r\nconst store = configureStore({\r\n    tasks: []\r\n});\r\n\r\nexport const withConfig = (\r\n    Component: React.ComponentType\r\n): React.ComponentType => {\r\n    return (props: object): JSX.Element => (\r\n        <Provider store={store}>\r\n            <MuiThemeProvider theme={theme}>\r\n                <CssBaseline />\r\n                <BrowserRouter>\r\n                    <Component {...props} />\r\n                </BrowserRouter>\r\n            </MuiThemeProvider>\r\n        </Provider>\r\n    );\r\n}","import { makeStyles } from '@material-ui/core';\n\nexport interface Props {}\n\nexport const useStyles = makeStyles(theme => ({\n    organizationName: {\n        flex: 1,\n        'font-size': '1.25rem',\n        'font-family': 'Lato, sans-serif',\n        'font-weight': 600,\n        'line-height': '1.6',\n        'padding-left': '10px',\n    },\n    propellerIcon: {\n        width: '30px',\n        'padding-top': '3px',\n    },\n    root: {\n        flexGrow: 1,\n    },\n}));","import { makeStyles } from '@material-ui/core';\n\nexport interface Props {}\n\nexport const useStyles = makeStyles(theme => ({\n    container: {\n        'padding-top': '30px',\n        'margin-left': 'auto',\n        'margin-right': 'auto',\n        'max-width': '1400px',\n    },\n    tableHeader: {\n        'font-size': '1.25rem',\n        'font-family': 'Lato, sans-serif',\n        'font-weight': 500,\n        'line-height': 3,\n        'padding-left': '20px',\n    }\n}));","import React from 'react';\r\nimport { useStyles, Props } from './types';\r\nimport { \r\n    CircularProgress,\r\n    Grid, Button, Chip,\r\n    Table, TableBody, TableCell,\r\n    TableContainer, TableHead,\r\n    TableRow, Paper, TablePagination,\r\n} from '@material-ui/core';\r\nimport { orange } from '@material-ui/core/colors';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\ninterface Row {\r\n    thumbnails: string;\r\n    createdAt: string;\r\n    channelId: string;\r\n    name: string;\r\n    description: string;\r\n    region: string;\r\n    status: any;\r\n    more: any;\r\n}\r\n\r\nconst OrgChannelsList = (props: Props): JSX.Element => {\r\n    const classes = useStyles();\r\n\r\n    const rows:Row[] = [\r\n        {\r\n            thumbnails: 'http://flv.io/thumb1.jpg',\r\n            createdAt: '3/1/2020, 13:31:27',\r\n            channelId: 'mbbu12ag',\r\n            name: 'MBB: UTSA vs. UAB',\r\n            description: '5910635f-7d11-45fd-a4f1-97c44a4cf5fc',\r\n            region: 'us-east-1',\r\n            status:<Chip color=\"primary\" label=\"RUNNING\" icon={<CircularProgress variant=\"indeterminate\" size={8} thickness={8} color=\"secondary\" /> } />,\r\n            more: <Button color=\"inherit\"><SearchIcon /></Button>,\r\n        },\r\n        {\r\n            thumbnails: 'http://flv.io/thumb2.jpg',\r\n            createdAt: '3/1/2020, 13:51:51',\r\n            channelId: 'softb1bg8',\r\n            name: 'Marshall Baseball vs Canisius Game 2',\r\n            description: 'b1968b2d-aedf-42ca-87c5-3ffffb9c1e57',\r\n            region: 'us-east-1',\r\n            status:<Chip label=\"READY\" />,\r\n            more: <Button color=\"inherit\"><SearchIcon /></Button>,\r\n        },\r\n        {\r\n            thumbnails: 'http://flv.io/thumb3.jpg',\r\n            createdAt: '3/1/2020, 13:46:01',\r\n            channelId: 'vstr9160',\r\n            name: 'vs. Troy University',\r\n            description: '41e9a590-7ddd-4400-90c0-616427dc6163   ',\r\n            region: 'us-east-1',\r\n            status: <Chip label=\"PENDING\" style={{backgroundColor: orange[800]}} />,\r\n            more: <Button color=\"inherit\"><SearchIcon /></Button>,\r\n        }\r\n    ]\r\n\r\n    return (\r\n        <Grid container justify='center' className={classes.container}>\r\n            <Paper elevation={2} style={{ width: \"100%\" }}>\r\n                <TableContainer>\r\n                    <div className={classes.tableHeader}>\r\n                        Channels (3)\r\n                    </div>\r\n                    <Table size=\"small\" aria-label=\"a dense table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell></TableCell>\r\n                                <TableCell align=\"left\">Created At</TableCell>\r\n                                <TableCell align=\"left\">ID</TableCell>\r\n                                <TableCell align=\"left\">Name</TableCell>\r\n                                <TableCell align=\"left\">Description</TableCell>\r\n                                <TableCell align=\"left\">Region</TableCell>\r\n                                <TableCell align=\"left\">Status</TableCell>\r\n                                <TableCell align=\"left\"></TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                        {rows.map(row => (\r\n                            <TableRow key={row.name}>\r\n                            <TableCell>\r\n                                <img src={row.thumbnails} style={{width: 100, borderRadius: '5%'}} alt=\"thumb\" />\r\n                            </TableCell>\r\n                            <TableCell align=\"left\">{row.createdAt}</TableCell>\r\n                            <TableCell align=\"left\">{row.channelId}</TableCell>\r\n                            <TableCell align=\"left\">{row.name}</TableCell>\r\n                            <TableCell align=\"left\">{row.description}</TableCell>\r\n                            <TableCell align=\"left\">{row.region}</TableCell>\r\n                            <TableCell align=\"center\">{row.status}</TableCell>\r\n                            <TableCell align=\"left\">\r\n                                <Button color=\"inherit\"><SearchIcon /></Button>\r\n                            </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[5, 10, 25]}\r\n                    component=\"div\"\r\n                    count={rows.length}\r\n                    rowsPerPage={5}\r\n                    page={0}\r\n                    onChangePage={() => {}}\r\n                    onChangeRowsPerPage={() => {}}\r\n                />\r\n            </Paper>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default OrgChannelsList;\r\n","import { makeStyles } from '@material-ui/core';\n\nexport interface Props {}\n\nexport const useStyles = makeStyles(theme => ({\n    container: {\n        'padding-top': '30px',\n        'margin-left': 'auto',\n        'margin-right': 'auto',\n        'max-width': '1400px',\n    },\n    tableHeader: {\n        'font-size': '1.25rem',\n        'font-family': 'Lato, sans-serif',\n        'font-weight': 500,\n        'line-height': 3,\n        'padding-left': '20px',\n    }\n}));","import React from 'react';\r\nimport { useStyles, Props } from './types';\r\nimport { \r\n    Grid, Chip,\r\n    Table, TableBody, TableCell,\r\n    TableContainer, TableHead,\r\n    TableRow, Paper,\r\n} from '@material-ui/core';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\ninterface Row {\r\n    type: string;\r\n    name: string;\r\n    inputDevices: number;\r\n    usedInputDevices: number;\r\n    status: any;\r\n}\r\n\r\nconst GroundEncodersList = (props: Props): JSX.Element => {\r\n    const classes = useStyles();\r\n\r\n    const rows:Row[] = [\r\n        {\r\n            type: \"Elemental Live\",\r\n            name: \"NYBC Master\",\r\n            inputDevices: 14,\r\n            usedInputDevices: 0,\r\n            status:<Chip color=\"primary\" label=\"ONLINE\" />,\r\n        },\r\n        {\r\n            type: \"Elemental Live\",\r\n            name: \"NYBC Backup\",\r\n            inputDevices: 14,\r\n            usedInputDevices: 0,\r\n            status:<Chip color=\"primary\" label=\"ONLINE\" />,\r\n        },\r\n        {\r\n            type: \"Elemental Live\",\r\n            name: \"FLL Development Encoder\",\r\n            inputDevices: 4,\r\n            usedInputDevices: 0,\r\n            status: <Chip label=\"OFFLINE\" style={{backgroundColor: red[800]}} />,\r\n        },\r\n        {\r\n            type: \"Elemental Live\",\r\n            name: \"DABL Official Encoder\",\r\n            inputDevices: 4,\r\n            usedInputDevices: 1,\r\n            status:<Chip color=\"primary\" label=\"ONLINE\" />,\r\n        },\r\n    ]\r\n\r\n    return (\r\n        <Grid container justify='center' className={classes.container}>\r\n            <Paper elevation={2} style={{ width: \"100%\" }}>\r\n                <TableContainer>\r\n                    <div className={classes.tableHeader}>\r\n                        Ground Encoders (4)\r\n                    </div>\r\n                    <Table size=\"small\" aria-label=\"a dense table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell align=\"left\">Type</TableCell>\r\n                                <TableCell align=\"left\">Name</TableCell>\r\n                                <TableCell align=\"center\">Input Devices</TableCell>\r\n                                <TableCell align=\"center\">Status</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                        {rows.map(row => (\r\n                            <TableRow key={row.name}>\r\n                                <TableCell align=\"left\">{row.type}</TableCell>\r\n                                <TableCell align=\"left\">{row.name}</TableCell>\r\n                                <TableCell align=\"center\">{row.usedInputDevices}/{row.inputDevices}</TableCell>\r\n                                <TableCell align=\"center\">{row.status}</TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </Paper>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default GroundEncodersList;\r\n","import { makeStyles } from '@material-ui/core';\n\nexport interface Props {}\n\nexport const useStyles = makeStyles(theme => ({\n    container: {\n        'padding-top': '30px',\n        'margin-left': 'auto',\n        'margin-right': 'auto',\n        'max-width': '1400px',\n    },\n    tableHeader: {\n        'font-size': '1.25rem',\n        'font-family': 'Lato, sans-serif',\n        'font-weight': 500,\n        'line-height': 3,\n        'padding-left': '20px',\n    }\n}));","import React from 'react';\r\nimport { useStyles, Props } from './types';\r\nimport { \r\n    Grid, Chip,\r\n    Table, TableBody, TableCell,\r\n    TableContainer, TableHead,\r\n    TableRow, Paper,\r\n} from '@material-ui/core';\r\n\r\ninterface Row {\r\n    id: string;\r\n    alias: string;\r\n    status: any;\r\n    channelId: string;\r\n}\r\n\r\nconst FixedIngestPointList = (props: Props): JSX.Element => {\r\n    const classes = useStyles();\r\n\r\n    const rows:Row[] = [\r\n        {\r\n            id: \"games3338\",\r\n            alias: \"Giant Bomb East 2\",\r\n            status:<Chip color=\"primary\" label=\"ATTACHED\" />,\r\n            channelId: \"giant6hfc\"\r\n        },\r\n        {\r\n            id: \"giant6adh\",\r\n            alias: \"Home - Giant Bomb Brad\",\r\n            status:<Chip label=\"UNATTACHED\" />,\r\n            channelId: \"\"\r\n        },\r\n        {\r\n            id: \"giant195c\",\r\n            alias: \"Home - Giant Bomb Vinny\",\r\n            status:<Chip label=\"UNATTACHED\" />,\r\n            channelId: \"\"\r\n        },\r\n    ]\r\n\r\n    return (\r\n        <Grid container justify='center' className={classes.container}>\r\n            <Paper elevation={2} style={{ width: \"100%\" }}>\r\n                <TableContainer>\r\n                    <div className={classes.tableHeader}>\r\n                        Fixed Ingest Points (3)\r\n                    </div>\r\n                    <Table size=\"small\" aria-label=\"a dense table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell align=\"left\">ID</TableCell>\r\n                                <TableCell align=\"left\">Alias</TableCell>\r\n                                <TableCell align=\"center\">Status</TableCell>\r\n                                <TableCell align=\"center\">Channel ID</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                        {rows.map(row => (\r\n                            <TableRow key={row.id}>\r\n                                <TableCell align=\"left\">{row.id}</TableCell>\r\n                                <TableCell align=\"left\">{row.alias}</TableCell>\r\n                                <TableCell align=\"center\">{row.channelId}</TableCell>\r\n                                <TableCell align=\"center\">{row.status}</TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </Paper>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default FixedIngestPointList;\r\n","import React from 'react';\r\nimport { Props } from './types';\r\nimport OrgChannelsList from '../../components/OrgChannelsList';\r\nimport GroundEncodersList from '../../components/GroundEncodersList';\r\nimport FixedIngestPointList from '../../components/FixedIngestPointList';\r\n\r\nconst Home = (props: Props): JSX.Element => {\r\n    return (\r\n        <div>\r\n            <OrgChannelsList />\r\n            <GroundEncodersList />\r\n            <FixedIngestPointList />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Grow from '@material-ui/core/Grow';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport AddIcon from '@material-ui/icons/Add';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n    },\n  }),\n);\n\nexport default function MenuListComposition() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef<HTMLButtonElement>(null);\n\n  const handleToggle = () => {\n    setOpen(prevOpen => !prevOpen);\n  };\n\n  const handleClose = (event: React.MouseEvent<EventTarget>) => {\n    if (anchorRef.current && anchorRef.current.contains(event.target as HTMLElement)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  function handleListKeyDown(event: React.KeyboardEvent) {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n      setOpen(false);\n    }\n  }\n\n  // return focus to the button when we transitioned from !open -> open\n  const prevOpen = React.useRef(open);\n  React.useEffect(() => {\n    if (prevOpen.current === true && open === false) {\n      anchorRef.current!.focus();\n    }\n\n    prevOpen.current = open;\n  }, [open]);\n\n  return (\n    <div className={classes.root}>\n      <div>\n        <Button\n          ref={anchorRef}\n          aria-controls={open ? 'menu-list-grow' : undefined}\n          aria-haspopup=\"true\"\n          onClick={handleToggle}\n        >\n          <AddIcon />\n          CREATE\n        </Button>\n        <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\n          {({ TransitionProps, placement }) => (\n            <Grow\n              {...TransitionProps}\n              style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n            >\n              <Paper>\n                <ClickAwayListener onClickAway={handleClose}>\n                  <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\n                    <MenuItem onClick={handleClose}>Channel</MenuItem>\n                    <MenuItem onClick={handleClose}>Fixed Ingest Point</MenuItem>\n                    <MenuItem onClick={handleClose}>Ground Encoder</MenuItem>\n                  </MenuList>\n                </ClickAwayListener>\n              </Paper>\n            </Grow>\n          )}\n        </Popper>\n      </div>\n    </div>\n  );\n}","import React from 'react';\r\n\r\nimport { withConfig } from '../withConfig';\r\nimport { useStyles, Props } from './types';\r\n\r\nimport PropellerIcon from '../images/bar-white-icon.svg';\r\nimport {\r\n    AppBar, Toolbar,\r\n    Typography\r\n}  from '@material-ui/core';\r\n\r\nimport Home from './Home';\r\nimport BarMenu from './Home/Menu';\r\n\r\nconst App = (props: Props): JSX.Element => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <img \r\n                        className={classes.propellerIcon}\r\n                        src={PropellerIcon} alt=\"Propeller Icon\"\r\n                    />\r\n                    <Typography\r\n                        component=\"div\"\r\n                        color=\"inherit\"\r\n                        className={classes.organizationName}\r\n                    >\r\n                        CBS Sports SideArm\r\n                    </Typography>\r\n                    <BarMenu />\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Home />\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default withConfig(App);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'typeface-roboto';\r\n\r\nimport App from './containers/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}